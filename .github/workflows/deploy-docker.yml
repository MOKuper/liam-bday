name: Deploy Docker to Digital Ocean

on:
  push:
    branches: [ main, master ]
  workflow_dispatch: # Allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP for testing
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, gd

    - name: Copy .env for testing
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 755 storage bootstrap/cache

    - name: Create SQLite database
      run: touch database/database.sqlite

    - name: Run Tests
      run: php artisan test

    - name: Deploy to Docker
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USERNAME }}
        key: ${{ secrets.DO_SSH_KEY }}
        script: |
          # Navigate to project directory
          cd /opt/liam-bday
          
          # Pull latest changes
          git pull origin main
          
          # Rebuild and restart containers
          docker-compose -f docker-compose.production.yml down
          docker-compose -f docker-compose.production.yml build --no-cache
          docker-compose -f docker-compose.production.yml up -d
          
          # Wait for MySQL and application to be ready
          sleep 20
          
          # Test database connection
          docker exec liam-bday-app php artisan tinker --execute="DB::connection()->getPdo(); echo 'Database connected!';" || sleep 10
          
          # Run Laravel commands inside container
          docker exec liam-bday-app php artisan migrate --force
          docker exec liam-bday-app php artisan config:cache
          docker exec liam-bday-app php artisan route:cache
          docker exec liam-bday-app php artisan view:cache
          docker exec liam-bday-app php artisan storage:link
          
          # Fix permissions
          docker exec liam-bday-app chown -R www-data:www-data /var/www/storage /var/www/bootstrap/cache
          
          echo "‚úÖ Docker deployment complete!"
          echo "üê≥ Container status:"
          docker-compose -f docker-compose.production.yml ps