name: Deploy to Shared Hosting

on:
  push:
    branches: [ main, master ]
  workflow_dispatch: # Allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, gd

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 755 storage bootstrap/cache

    - name: Create SQLite database
      run: touch database/database.sqlite

    - name: Run Tests
      run: php artisan test

    - name: Deploy to Shared Server
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USERNAME }}
        key: ${{ secrets.DO_SSH_KEY }}
        script: |
          # Navigate to project directory
          cd /var/www/liam-bday
          
          # Pull latest changes
          git pull origin main
          
          # Install/update dependencies
          composer install --optimize-autoloader --no-dev --no-interaction
          
          # Run database migrations
          php artisan migrate --force
          
          # Clear and cache config (safe operations)
          php artisan config:clear
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          
          # Ensure storage symlink exists
          php artisan storage:link
          
          # Set proper permissions (using existing web user)
          WEB_USER=$(ps aux | grep -E '[n]ginx|[w]ww-data' | grep -v root | head -1 | cut -d\  -f1)
          sudo chown -R $WEB_USER:$WEB_USER /var/www/liam-bday/storage /var/www/liam-bday/bootstrap/cache /var/www/liam-bday/database
          sudo chmod -R 775 /var/www/liam-bday/storage /var/www/liam-bday/bootstrap/cache
          sudo chmod 664 /var/www/liam-bday/database/database.sqlite
          
          # Note: We DON'T restart services to avoid affecting other projects
          echo "âœ… Deployment complete - website updated!"
          echo "ðŸ”— Visit: https://your-domain.com"