FROM php:8.2-fpm-alpine

# Set working directory
WORKDIR /var/www

# Install system dependencies
RUN apk add --no-cache \
    git \
    curl \
    libpng-dev \
    libxml2-dev \
    zip \
    unzip \
    mysql-client \
    nginx \
    supervisor

# Install PHP extensions
RUN docker-php-ext-install pdo pdo_mysql gd xml mbstring

# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Copy application code
COPY . /var/www

# Set permissions
RUN chown -R www-data:www-data /var/www \
    && chmod -R 755 /var/www/storage \
    && chmod -R 755 /var/www/bootstrap/cache

# Create database directory (for potential SQLite fallback)
RUN mkdir -p /var/www/database \
    && chown www-data:www-data /var/www/database

# Install composer dependencies
RUN composer install --optimize-autoloader --no-dev --no-interaction

# Create nginx config
COPY docker/nginx.conf /etc/nginx/nginx.conf

# Create supervisor config
COPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Generate application key and run setup
RUN cp .env.docker .env \
    && php artisan key:generate \
    && php artisan config:cache \
    && php artisan route:cache \
    && php artisan view:cache \
    && php artisan storage:link

# Expose port
EXPOSE 80

# Start supervisor
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]